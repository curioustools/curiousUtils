apply from: "${project.rootDir}/librariesCommonDataAndroid.gradle"


android{
    buildFeatures {
        viewBinding true
    }
}



/* - my custom arch's  BaseVBActivity requires activity+viewbinding
   - hilt requires activity+view binding + hilt
   - view binding helper classes requires lifecycles (lifecycles.destroy)
   thus jetpack have a very intermingled relationship with android , view binding, hilt and other stuff.
   this package will provide utilities for
        all the core android(activities/fragment/context/etc) +
        jetpack libs +
        custom arch/custom views
        hilt support
*/
dependencies {
    def core_ktx = parent.ext.coreKtx //"1.6.0"
    def appCompat =parent.ext.appCompat// "1.3.1"

    //core android
    api "androidx.core:core-ktx:$core_ktx"
    api "androidx.appcompat:appcompat:$appCompat"

    //core android views
    api 'androidx.constraintlayout:constraintlayout:2.1.0'
    api 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    api 'androidx.navigation:navigation-ui-ktx:2.3.5'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.gridlayout:gridlayout:1.0.0'


    //google_material components
    api 'com.google.android.material:material:1.4.0'


    // jetpack lifecycles
    def lifecycle_version = "2.4.0-alpha03"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"                          // ViewModel
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"                           // LiveData
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"                   // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"                           // if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"                                // optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-process:$lifecycle_version"                                // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process


}