apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "maven-publish"

android {
    compileSdkVersion parent.ext.compileSdkVersion
    buildToolsVersion parent.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion parent.ext.minSdkVersion
        targetSdkVersion parent.ext.targetSdkVersion
        versionCode parent.ext.versionCode
        versionName parent.ext.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        kotlinOptions.freeCompilerArgs += ['-module-name', "${parent.ext.groupId}.${project.getName()}"] // Reduces META-INF file conflicts
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

// Because the components are created only during the afterEvaluate phase, you must configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {

            release(MavenPublication) { // Creates a Maven publication called "release".
                groupId = parent.ext.groupId
                artifactId = project.getName()
                version =  parent.ext.versionName

                from components.release // Applies the component for the release build variant.
            }
        }
    }
}

// Gradle task to generate sources after building a release aar
task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn 'sourcesJar'
    }
}
